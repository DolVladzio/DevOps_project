{
  "project": {
    "name": "my-infra",
    "environment": "dev",
    "region": "europe",
    "os": "ubuntu",
    "terraform_username": "terraform-user",
    "state_bucket_location_gcp": "europe-west3a",
    "state_bucket_location_aws": "eu-central-1",
    "state_bucket_location_azurerm": "West US",
    "bucket_state_name": "state-bucket-name-1377",
    "repository_location_gcp": "europe-west3",
    "repository_location_aws": "eu-central-1",
    "repository_location_azurerm": "West US",
    "repo_name": "test-artifact-registry",

    "keys":[
      "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINaAVdd0qt6pDi6SziVFNliMRWtBkqVArDI5Dl/D+wSb",
      "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDYLUdSPOk00sjUNjHi53n0y6jnJndZS6GN6JbpKmaQRaBLZn8dHJf+vm1HedDiEf7zZL1gy9ILm6mISC5+wWFS4noxfd6p8Z15Ccsp0I2Z3eTVSceBHRhXSzIUo0YkILtIsW3TS6/IjJtAxKa8xc2aOLLiMIkkhVYZHlkYVGMY+8rgHKrjeipFHE6EgP0NF08NHZrvBjSv8CQneuT/C0G2Yz5f/Z83htFJ3ZfnYt8Yapc3hPVUbyzQ3xY3vW2tTp1X5voT2PkhcCGoVUgwH5sU3zcwruy760zKATHiZMzlKULRoCFGYH0CPWEpPOmEElAJCPyZNBUjbqyBHhsmsAsN peachka@anastasiias-MacBook-Pro.local",
      "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC1Y3jykJs6hKYDRJdAemfkB4L8Zn7xoHjJODV750K4L7gIl2BT/xpUi4u7Ekww7UJIysFIabUR/e3w45a3oA3dZTYkQyyW3CbMLqc0U9dJDTHIXqrSSm+/hPiycP3i9JlezgqzKcTOetb5BEqRGf8jIYhi2VDnz+KMlnXt8UDms5WdMP+QFLHbrh1uTq31nCUT84jKwXBs/ar9Rxzs9keSEYPkZE0aSpegp7XQsVSHMjCVylAm8TIUR6CMYaB10zKLJM99snPGdx9iokJESR8g9xBQMhRvVYxONR28ZWDfPYiO8zKwGSkibQ2L4IkgRZsghenD57wPIPWmTtHoSaA/JHLWR4a8FZBqY6FPysv2XNSwyxiHFaR8T7Zpj8kt9lUwEtityBWpC/2EXLJ3lGzIAVgyz/Yq0qD80x1ODvt/4MQgv235qxDXq0Y5AXIAIphjlENKh78YkM61OQ6LnIH7oisY+VJTz9jhHhL7y6hERF/J8rxPOMMZCTqJGW9Daq41zCqdNZ4ehG/+hgibh092jWMcxWGVbcJHp1bmFHu5tBaviuKVCLw2/0DlX9JC31+rTcUT2HDAqMmp+Ii3yXsZboGJ4Is2Er5qUArsHvo+LSmE8zw8yMpaSEv2V8ndRDwtolbHiKoxN1LFSffu0LYrbjzPIdZU3ua8glUti03yTQ== nikita@kali"
    ]
  },

  "network": [
    {
      "name": "main",
      "vpc_cidr": "10.0.0.0/16",
      "subnets": [
        {
          "name": "public-subnet",
          "cidr": "10.0.1.0/24",
          "public": true,
          "zone": "a"
        },
        {
          "name": "private-subnet",
          "cidr": "10.0.2.0/24",
          "public": false,
          "zone": "b"
        },
        {
          "name": "private-subnet-2",
          "cidr": "10.0.3.0/24",
          "public": false,
          "zone": "a"
        }
      ]
    }
  ],
  
  "artifact_registry":[
    {
      "enabled": true,
      "provider": "gcp",
      "name": "my-artifact-registry",
      "region": "europe-west3",
      "repository_type": "docker",
      "format": "DOCKER",
      "auth_required": true
    },
    {
      "enabled": true,
      "provider": "aws",
      "name": "my-artifact-registry",
      "region": "eu-central-1",
      "repository_type": "docker",
      "format": "DOCKER",
      "auth_required": true
    },
    {
      "enabled": true,
      "provider": "azurerm",
      "name": "my-artifact-registry",
      "region": "",
      "repository_type": "docker",
      "format": "DOCKER",
      "auth_required": true
    }
  ],

  "vm_instances": [
    {
      "name": "reverse-proxy",
      "network": "main",
      "size": "small",
      "zone": "a",
      "subnet": "public-subnet",
      "tags": ["proxy"],
      "public_ip": true,
      "port": 80,
      "security_groups": ["reverse-proxy-sg"],
      "iam_instance_profile_name": null
    },
    {
      "name": "frontend",
      "network": "main",
      "size": "small",
      "zone": "b",
      "subnet": "private-subnet",
      "public_ip": false,
      "tags": ["frontend"],
      "port": 3000,
      "security_groups": ["frontend-sg"],
      "iam_instance_profile_name": "EC2_ECR"
    },
    {
      "name": "backend",
      "network": "main",
      "size": "small",
      "zone": "b",
      "subnet": "private-subnet",
      "public_ip": false,
      "tags": ["backend"],
      "port": 8080,
      "security_groups": ["backend-sg"],
      "iam_instance_profile_name": "EC2_ECR"
    },
    {
      "name": "redis",
      "network": "main",
      "size": "small",
      "zone": "b",
      "subnet": "private-subnet",
      "public_ip": false,
      "tags": ["cache"],
      "port": 6379,
      "security_groups": ["redis-sg"],
      "iam_instance_profile_name": null
    },
    {
      "name": "bastion",
      "network": "main",
      "size": "small",
      "zone": "a",
      "subnet": "public-subnet",
      "public_ip": true,
      "tags": ["bastion", "ssh"],
      "port": 22,
      "security_groups": ["bastion-sg"],
      "iam_instance_profile_name": null
    }
  ],

  "iam": {
    "aws": [
      {
        "name": "EC2_ECR",
        "description": "Allows EC2 instances to pull images from ECR",
        "role_policy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:DescribeTags",
                "ecs:CreateCluster",
                "ecs:DeregisterContainerInstance",
                "ecs:DiscoverPollEndpoint",
                "ecs:Poll",
                "ecs:RegisterContainerInstance",
                "ecs:StartTelemetrySession",
                "ecs:UpdateContainerInstancesState",
                "ecs:Submit*",
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": "ecs:TagResource",
              "Resource": "*",
              "Condition": {
                "StringEquals": {
                  "ecs:CreateAction": [
                    "CreateCluster",
                    "RegisterContainerInstance"
                  ]
                }
              }
            }
          ]
        },
        "trust_policy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": ["sts:AssumeRole"],
              "Principal": {
                "Service": ["ec2.amazonaws.com"]
              }
            }
          ]
        }
      }
    ],
    "gcp": []
  },

  "databases": [
    {
      "name": "maindb",
      "network": "main",
      "type": "postgres",
      "version": "14",
      "size": "small",
      "zone": ["a", "b"],
      "subnets": ["private-subnet", "private-subnet-2"],
      "port": 5432,
      "security_groups": ["db-sg"]
    }
  ],

  "networks": [
    { "name": "public", "cidr": "0.0.0.0/0" },
    { "name": "internal", "cidr": "10.0.0.0/16" }
  ],

  "security_groups": [
    {
      "name": "reverse-proxy-sg",
      "vpc": "main",
      "attach_to": ["reverse-proxy"],
      "description": "Allow public HTTP traffic and forward to front/back",
      "ingress": [
        { "protocol": "tcp", "port": 80, "source": "public" },
        { "protocol": "tcp", "port": 22, "source": "bastion-sg" }
      ],
      "egress": [
        { "protocol": "tcp", "port": 3000, "destination": "frontend-sg" },
        { "protocol": "tcp", "port": 8080, "destination": "backend-sg" },
        { "protocol": "tcp", "port": 80, "destination": "public" },
        { "protocol": "tcp", "port": 443, "destination": "public" },
        { "protocol": "udp", "port": 53, "destination": "public" }
      ]
    },
    {
      "name": "frontend-sg",
      "vpc": "main",
      "attach_to": ["frontend"],
      "description": "Serve assets to proxy",
      "ingress": [
        { "protocol": "tcp", "port": 3000, "source": "reverse-proxy-sg" },
        { "protocol": "tcp", "port": 22, "source": "bastion-sg" }
      ],
      "egress": [
        { "protocol": "tcp", "port": 80, "destination": "public" },
        { "protocol": "tcp", "port": 443, "destination": "public" },
        { "protocol": "udp", "port": 53, "destination": "public" }
      ]
    },
    {
      "name": "backend-sg",
      "vpc": "main",
      "attach_to": ["backend"],
      "description": "API server behind proxy with DB/Redis access",
      "ingress": [
        { "protocol": "tcp", "port": 8080, "source": "reverse-proxy-sg" },
        { "protocol": "tcp", "port": 22, "source": "bastion-sg" }
      ],
      "egress": [
        { "protocol": "tcp", "port": 5432, "destination": "db-sg" },
        { "protocol": "tcp", "port": 6379, "destination": "redis-sg" },
        { "protocol": "tcp", "port": 80, "destination": "public" },
        { "protocol": "tcp", "port": 443, "destination": "public" },
        { "protocol": "udp", "port": 53, "destination": "public" }
      ]
    },
    {
      "name": "db-sg",
      "vpc": "main",
      "attach_to": ["maindb"],
      "description": "PostgreSQL accessible only from backend",
      "ingress": [
        { "protocol": "tcp", "port": 5432, "source": "backend-sg" },
        { "protocol": "tcp", "port": 22, "source": "bastion-sg" }
      ],
      "egress": [
        { "protocol": "tcp", "port": 80, "destination": "public" },
        { "protocol": "tcp", "port": 443, "destination": "public" },
        { "protocol": "udp", "port": 53, "destination": "public" }
      ]
    },
    {
      "name": "redis-sg",
      "vpc": "main",
      "attach_to": ["redis"],
      "description": "Redis accessible only from backend",
      "ingress": [
        { "protocol": "tcp", "port": 6379, "source": "backend-sg" },
        { "protocol": "tcp", "port": 22, "source": "bastion-sg" }
      ],
      "egress": [
        { "protocol": "tcp", "port": 80, "destination": "public" },
        { "protocol": "tcp", "port": 443, "destination": "public" },
        { "protocol": "udp", "port": 53, "destination": "public" }
      ]
    },
    {
      "name": "bastion-sg",
      "vpc": "main",
      "attach_to": ["bastion"],
      "description": "Allow SSH from admin IP to private network",
      "ingress": [
        { "protocol": "tcp", "port": 22, "source": "public" }
      ],
      "egress": [
        { "protocol": "tcp", "port": 22, "destination": "frontend-sg" },
        { "protocol": "tcp", "port": 22, "destination": "backend-sg" },
        { "protocol": "tcp", "port": 22, "destination": "redis-sg" },
        { "protocol": "tcp", "port": 22, "destination": "db-sg" },
        { "protocol": "tcp", "port": 80, "destination": "public" },
        { "protocol": "tcp", "port": 443, "destination": "public" },
        { "protocol": "udp", "port": 53, "destination": "public" },
        { "protocol": "tcp", "port": 22, "destination": "reverse-proxy-sg" }
      ]
    }
  ],

  "containers": {
    "backend": {
      "name": "class_schedule_backend",
      "image": "class_schedule_backend",
      "tag": "latest",
      "ports": ["8080:8080"],
      "env": [
        "DB_HOST",
        "DB_USER",
        "DB_PASSWORD",
        "DB_PORT",
        "DB_NAME",
        "REDIS_HOST",
        "REDIS_PORT"
      ]
    },
    "frontend": {
      "name": "class_schedule_frontend",
      "image": "class_schedule_frontend",
      "tag": "latest",
      "ports": ["3000:3000"]
    },
    "redis": {
      "name": "class_schedule_cache",
      "image": "redis",
      "tag": "latest",
      "ports": ["6379:6379"]
    }
  }
}
