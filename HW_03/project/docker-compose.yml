################################################
version: '3.8'
services:
################################################
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: backend
    container_name: backend
    restart: always
    env_file:
      - .env
    environment:
      # PostgreSQL env
      DB_HOST: ${DB_HOST}
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      # Redis env
      REDIS_HOST: ${REDIS_HOST}
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - new_network
################################################
  frontend:
    build:
      context: ./frontend
    image: frontend
    container_name: frontend
    restart: always
    environment:
      - PROXY_PASS_HOST=backend
    ports:
      - "80:80"
    depends_on:
      - postgres
      - backend
    networks:
      - new_network
################################################
  postgres:
    build:
      context: ./postgres
    image: postgres
    container_name: postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - new_network
################################################
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    networks:
      - new_network
################################################
networks:
  new_network:
################################################
